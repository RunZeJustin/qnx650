/*
 * $QNXLicenseC:
 * Copyright 2007, QNX Software Systems. All Rights Reserved.
 * 
 * You must obtain a written license from and pay applicable license fees to QNX 
 * Software Systems before you may reproduce, modify or distribute this software, 
 * or any work that includes all or part of this software.   Free development 
 * licenses are available for evaluation and non-commercial purposes.  For more 
 * information visit http://licensing.qnx.com or email licensing@qnx.com.
 *  
 * This file may contain contributions from others.  Please review this entire 
 * file for other proprietary rights or license notices, as well as the QNX 
 * Development Suite License Guide at http://licensing.qnx.com/license-guide/ 
 * for other information.
 * $
 */



/*
 * BCM1250 interrupt number definitions
 *

 *
 */
#ifndef __MIPS_BCM1250INTR_H_INCLUDED
#define __MIPS_BCM1250INTR_H_INCLUDED

#include <mips/intr.h>

#define BCM1250_INTR_CLASS		(0x8005UL<<16)
#define BCM1250_INTR_WD_TIMER_0	(BCM1250_INTR_CLASS +  0)
#define BCM1250_INTR_WD_TIMER_1	(BCM1250_INTR_CLASS +  1)
#define BCM1250_INTR_TIMER_0	(BCM1250_INTR_CLASS +  2)
#define BCM1250_INTR_TIMER_1	(BCM1250_INTR_CLASS +  3)
#define BCM1250_INTR_TIMER_2	(BCM1250_INTR_CLASS +  4)
#define BCM1250_INTR_TIMER_3	(BCM1250_INTR_CLASS +  5)
#define BCM1250_INTR_SMB_0		(BCM1250_INTR_CLASS +  6)
#define BCM1250_INTR_SMB_1		(BCM1250_INTR_CLASS +  7)
#define BCM1250_INTR_UART_0		(BCM1250_INTR_CLASS +  8)
#define BCM1250_INTR_UART_1		(BCM1250_INTR_CLASS +  9)
#define BCM1250_INTR_SER_0		(BCM1250_INTR_CLASS + 10)
#define BCM1250_INTR_SER_1		(BCM1250_INTR_CLASS + 11)
#define BCM1250_INTR_PCMCIA		(BCM1250_INTR_CLASS + 12)
#define BCM1250_INTR_ADDR_TRAP	(BCM1250_INTR_CLASS + 13)
#define BCM1250_INTR_PERF_CNT	(BCM1250_INTR_CLASS + 14)
#define BCM1250_INTR_TRACE_FREEZE (BCM1250_INTR_CLASS + 15)
#define BCM1250_INTR_BAD_ECC	(BCM1250_INTR_CLASS + 16)
#define BCM1250_INTR_COR_ECC	(BCM1250_INTR_CLASS + 17)
#define BCM1250_INTR_IO_BUS		(BCM1250_INTR_CLASS + 18)
#define BCM1250_INTR_MAC_0		(BCM1250_INTR_CLASS + 19)
#define BCM1250_INTR_MAC_1		(BCM1250_INTR_CLASS + 20)
#define BCM1250_INTR_MAC_2		(BCM1250_INTR_CLASS + 21)
#define BCM1250_INTR_DM_CH_0	(BCM1250_INTR_CLASS + 22)
#define BCM1250_INTR_DM_CH_1	(BCM1250_INTR_CLASS + 23)
#define BCM1250_INTR_DM_CH_2	(BCM1250_INTR_CLASS + 24)
#define BCM1250_INTR_DM_CH_3	(BCM1250_INTR_CLASS + 25)
#define BCM1250_INTR_MBOX_0		(BCM1250_INTR_CLASS + 26)
#define BCM1250_INTR_MBOX_1		(BCM1250_INTR_CLASS + 27)
#define BCM1250_INTR_MBOX_2		(BCM1250_INTR_CLASS + 28)
#define BCM1250_INTR_MBOX_3		(BCM1250_INTR_CLASS + 29)
/* #define BCM1250_INTR_CYCLE_CP0	(BCM1250_INTR_CLASS + 30) Reserved */
/* #define BCM1250_INTR_CYCLE_CP1	(BCM1250_INTR_CLASS + 31) Reserved */
#define BCM1250_INTR_GPIO_0		(BCM1250_INTR_CLASS + 32 +  0)
#define BCM1250_INTR_GPIO_1		(BCM1250_INTR_CLASS + 32 +  1)
#define BCM1250_INTR_GPIO_2		(BCM1250_INTR_CLASS + 32 +  2)
#define BCM1250_INTR_GPIO_3		(BCM1250_INTR_CLASS + 32 +  3)
#define BCM1250_INTR_GPIO_4		(BCM1250_INTR_CLASS + 32 +  4)
#define BCM1250_INTR_GPIO_5		(BCM1250_INTR_CLASS + 32 +  5)
#define BCM1250_INTR_GPIO_6		(BCM1250_INTR_CLASS + 32 +  6)
#define BCM1250_INTR_GPIO_7		(BCM1250_INTR_CLASS + 32 +  7)
#define BCM1250_INTR_GPIO_8		(BCM1250_INTR_CLASS + 32 +  8)
#define BCM1250_INTR_GPIO_9		(BCM1250_INTR_CLASS + 32 +  9)
#define BCM1250_INTR_GPIO_10	(BCM1250_INTR_CLASS + 32 + 10)
#define BCM1250_INTR_GPIO_11	(BCM1250_INTR_CLASS + 32 + 11)
#define BCM1250_INTR_GPIO_12	(BCM1250_INTR_CLASS + 32 + 12)
#define BCM1250_INTR_GPIO_13	(BCM1250_INTR_CLASS + 32 + 13)
#define BCM1250_INTR_GPIO_14	(BCM1250_INTR_CLASS + 32 + 14)
#define BCM1250_INTR_GPIO_15	(BCM1250_INTR_CLASS + 32 + 15)
#define BCM1250_INTR_GPIO_16	(BCM1250_INTR_CLASS + 32 + 16)
#define BCM1250_INTR_GPIO_17	(BCM1250_INTR_CLASS + 32 + 17)
#define BCM1250_INTR_GPIO_18	(BCM1250_INTR_CLASS + 32 + 18)
#define BCM1250_INTR_GPIO_19	(BCM1250_INTR_CLASS + 32 + 19)
#define BCM1250_INTR_GPIO_20	(BCM1250_INTR_CLASS + 32 + 20)
#define BCM1250_INTR_GPIO_21	(BCM1250_INTR_CLASS + 32 + 21)
#define BCM1250_INTR_GPIO_22	(BCM1250_INTR_CLASS + 32 + 22)
#define BCM1250_INTR_GPIO_23	(BCM1250_INTR_CLASS + 32 + 23)
#define BCM1250_INTR_GPIO_24	(BCM1250_INTR_CLASS + 32 + 24)
#define BCM1250_INTR_GPIO_25	(BCM1250_INTR_CLASS + 32 + 25)
#define BCM1250_INTR_GPIO_26	(BCM1250_INTR_CLASS + 32 + 26)
#define BCM1250_INTR_GPIO_27	(BCM1250_INTR_CLASS + 32 + 27)
#define BCM1250_INTR_GPIO_28	(BCM1250_INTR_CLASS + 32 + 28)
#define BCM1250_INTR_GPIO_29	(BCM1250_INTR_CLASS + 32 + 29)
#define BCM1250_INTR_GPIO_30	(BCM1250_INTR_CLASS + 32 + 30)
#define BCM1250_INTR_GPIO_31	(BCM1250_INTR_CLASS + 32 + 31)
#define BCM1250_INTR_LDT_FATAL	(BCM1250_INTR_CLASS + 48)
#define BCM1250_INTR_LDT_NONFATAL (BCM1250_INTR_CLASS + 49)
#define BCM1250_INTR_LDT_SMI	(BCM1250_INTR_CLASS + 50)
#define BCM1250_INTR_LDT_NMI	(BCM1250_INTR_CLASS + 51)
#define BCM1250_INTR_LDT_INIT	(BCM1250_INTR_CLASS + 52)
#define BCM1250_INTR_LDT_STARTUP (BCM1250_INTR_CLASS + 53)
#define BCM1250_INTR_LDT_EXT	(BCM1250_INTR_CLASS + 54)
#define BCM1250_INTR_PCI_ERROR	(BCM1250_INTR_CLASS + 55)
#define BCM1250_INTR_PCI_INTA	(BCM1250_INTR_CLASS + 56)
#define BCM1250_INTR_PCI_INTB	(BCM1250_INTR_CLASS + 57)
#define BCM1250_INTR_PCI_INTC	(BCM1250_INTR_CLASS + 58)
#define BCM1250_INTR_PCI_INTD	(BCM1250_INTR_CLASS + 59)
#define BCM1250_INTR_SPARE		(BCM1250_INTR_CLASS + 60)
/* #define BCM1250_INTR_MAC_0_CH1	(BCM1250_INTR_CLASS + 61) Reserved */
/* #define BCM1250_INTR_MAC_1_CH1	(BCM1250_INTR_CLASS + 62) Reserved */
/* #define BCM1250_INTR_MAC_2_CH1	(BCM1250_INTR_CLASS + 63) Reserved */

#endif

/* __SRCVERSION("bcm1250intr.h $Rev: 152112 $"); */
